
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, roc_curve, auc


file_path = 'stresveri.csv'  
data = pd.read_csv(file_path)


print("Veri Setinin İlk 5 Satırı:")
print(data.head())

print("\nVeri Bilgisi:")
print(data.info())

print("\nVeri Setinin Tanımlayıcı İstatistikleri:")
print(data.describe())


threshold = data['PSS_score'].median()
data['high_stress'] = (data['PSS_score'] > threshold).astype(int)


plt.figure(figsize=(6, 4))
sns.countplot(x='high_stress', data=data)
plt.title("High Stress Distribution")
plt.show()


X = data.drop(columns=['participant_id', 'day', 'PSS_score', 'high_stress'])
y = data['high_stress']


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


log_reg = LogisticRegression(max_iter=500)
log_reg.fit(X_train, y_train)


y_pred = log_reg.predict(X_test)
y_proba = log_reg.predict_proba(X_test)[:, 1]


print("\nModel Doğruluğu (Accuracy):", accuracy_score(y_test, y_pred))
print("\nConfusion Matrix:")
print(confusion_matrix(y_test, y_pred))
print("\nClassification Report:")
print(classification_report(y_test, y_pred))


fpr, tpr, thresholds = roc_curve(y_test, y_proba)
roc_auc = auc(fpr, tpr)

plt.figure(figsize=(8, 6))
plt.plot(fpr, tpr, color='blue', lw=2, label=f'ROC curve (AUC = {roc_auc:.2f})')
plt.plot([0, 1], [0, 1], color='gray', linestyle='--')
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('ROC Curve')
plt.legend(loc="lower right")
plt.show()


conf_matrix = confusion_matrix(y_test, y_pred)

plt.figure(figsize=(6, 4))
sns.heatmap(conf_matrix, annot=True, fmt="d", cmap="Blues",
            xticklabels=['Low Stress', 'High Stress'],
            yticklabels=['Low Stress', 'High Stress'])
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()
